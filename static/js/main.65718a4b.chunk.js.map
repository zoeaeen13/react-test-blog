{"version":3,"sources":["contexts.js","utills.js","constants/style.js","components/Header.js","WebAPI.js","components/Intro.js","components/Home.js","pages/Home/HomePage.js","components/About.js","pages/About/AboutPage.js","components/Login.js","pages/Login/LoginPage.js","pages/Register/RegisterPage.js","components/NewPost.js","pages/NewPost/NewPostPage.js","pages/Post/PostPage.js","components/Pagination.js","pages/Archive/ArchivePage.js","components/App.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","timeConverter","timestamp","date","Date","getMonth","getDate","getFullYear","MEDIA_QUERY_MD","MEDIA_QUERY_LG","Nav","styled","div","BlogLogo","Wrapper","NavItem","Link","props","$active","BtnLogin","BtnLogout","button","BtnPost","Header","location","useLocation","history","useHistory","isPosting","pathname","useContext","user","setUser","to","onClick","push","BASE_URL","getAllPosts","fetch","then","res","json","getUserPosts","userId","getUserInfo","headers","authorization","IntroWrapper","IntroBadge","h5","AuthorName","AuthorDesc","p","AvatarWrapper","Intro","src","alt","href","PostWrapper","PostTitle","RelatedPostTitle","PostContent","PostInfoTitle","h2","PostAuthor","PostBody","PostDate","BtnReadMore","RelatedPostWrapper","RelatedPostNum","span","ArchiveContent","RelatedTitle","h4","ArchiveTitle","h3","HomePageRoot","HomeWrapper","RelatedWrapper","Post","post","createdAt","id","title","body","PostInfo","nickname","RelatedPost","order","ArchiveItem","HomePage","useState","posts","setPosts","useEffect","map","AboutWrapper","AboutBadge","AboutTitle","AboutDesc","AboutAvatarWrapper","AboutPage","LoginPageRoot","LoginTitle","LoginDesc","LoginWrapper","LoginInputHint","h6","verify","LoginInput","input","ErrorMessage","BtnBackToHome","LoginPage","account","setAccount","password","setPassword","isClicked","setClicked","errorMessage","setErrorMessage","handleInputChange","e","target","name","value","type","onChange","username","method","JSON","stringify","login","response","ok","message","data","RegisterPage","setUsername","setNickname","readonly","register","NewPostForm","form","NewPostWrapper","InputPostTitle","InputPostContent","textarea","BtnPublish","NewPostPage","setTitle","content","setContent","onSubmit","preventDefault","addNewPost","placeholder","rows","cols","PostPage","slug","useParams","recentPost","setRecentPost","setUserId","relatedPosts","setRelatedPosts","console","log","postInfo","responseData","relatedAllPosts","filter","Number","length","index","PaginationWrapper","CurrentPage","ArrowWrapper","Pagination","current","total","handleChangePage","ArchivePage","userPosts","setUserPosts","author","setAuthor","archivePosts","setArchivePosts","currentPage","setCurrentPage","totalPage","setTotalPage","recentPosts","setRecentPosts","reverse","postNum","quotient","Math","ceil","slice","page","App","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65718a4b.chunk.js","sourcesContent":["import { createContext } from \"react\";\nexport const AuthContext = createContext(null);\n","const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n\nexport function timeConverter(timestamp) {\n  let date = new Date(timestamp);\n  let months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  return (\n    months[date.getMonth()] + \" \" + date.getDate() + \", \" + date.getFullYear()\n  );\n}\n","export const MEDIA_QUERY_MD = \"@media (max-width: 576px)\";\nexport const MEDIA_QUERY_LG = \"@media (max-width: 768px)\";\n","import styled from \"styled-components\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../contexts\";\nimport { setAuthToken } from \"../utills\";\nimport { MEDIA_QUERY_MD } from \"../constants/style\";\n\nconst Nav = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #eeeeee;\n  padding: 20px;\n\n  ${MEDIA_QUERY_MD} {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst BlogLogo = styled.div`\n  margin: 0 30px;\n  color: #222222;\n  font-size: 28px;\n  font-weight: bold;\n  font-family: \"Archivo Black\", sans-serif;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst NavItem = styled(Link)`\n  color: #d1d1d1;\n  text-decoration: none;\n  padding: 10px;\n\n  &:hover {\n    color: #222222;\n    filter: brightness(1.05);\n  }\n\n  ${(props) => props.$active && \"color: #222222;\"};\n`;\n\nconst BtnLogin = styled(Link)`\n  margin: 0 10px;\n  border-radius: 4px;\n  padding: 8px 15px;\n  background: #212121;\n  color: white;\n  transition: all 0.3s ease-in;\n  text-decoration: none;\n\n  &:hover {\n    background: #414141;\n  }\n`;\nconst BtnLogout = styled.button`\n  background: #212121;\n  color: white;\n  padding: 8px 15px;\n  border-radius: 4px;\n  transition: all 0.2s ease-in;\n  cursor: pointer;\n\n  &:hover {\n    background: #414141;\n  }\n`;\n\nconst BtnPost = styled(BtnLogin)`\n  box-sizing: border-box;\n  background: white;\n  border: 1px solid #212121;\n  color: #212121;\n\n  &:hover {\n    background: #eeeeee;\n    border-color: white;\n  }\n`;\n\nexport default function Header() {\n  let location = useLocation();\n  const history = useHistory();\n  const isPosting = location.pathname === \"/post\";\n  const { user, setUser } = useContext(AuthContext);\n\n  const handleLogout = () => {\n    setAuthToken(null);\n    setUser(null);\n\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <Nav>\n      <Wrapper>\n        <BlogLogo>LIDEMY</BlogLogo>\n        <NavItem to=\"/\" $active={location.pathname === \"/\"}>\n          Home\n        </NavItem>\n        <NavItem to=\"/archive\" $active={location.pathname === \"/archive\"}>\n          Archive\n        </NavItem>\n        <NavItem to=\"/about\" $active={location.pathname === \"/about\"}>\n          About\n        </NavItem>\n      </Wrapper>\n      <div>\n        {!user && <BtnLogin to=\"/register\">Sign up</BtnLogin>}\n        {!user && <BtnLogin to=\"/login\">Log in</BtnLogin>}\n        {user && !isPosting && (\n          <BtnLogout onClick={handleLogout}>Sign out</BtnLogout>\n        )}\n        {user && !isPosting && <BtnPost to=\"/post\">New Post</BtnPost>}\n      </div>\n    </Nav>\n  );\n}\n","import { getAuthToken } from \"./utills\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getAllPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getPostInfo = (id) => {\n  return fetch(`${BASE_URL}/posts?id=${id}&_expand=user`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getUserPosts = (userId) => {\n  return fetch(`${BASE_URL}/users/${userId}?_embed=posts`).then((res) =>\n    res.json()\n  );\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname: nickname,\n      username: username,\n      password: password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getUserInfo = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const addNewPost = (title, content) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title: title,\n      body: content,\n    }),\n  }).then((res) => res.json());\n};\n","import styled from \"styled-components\";\nimport { MEDIA_QUERY_LG } from \"../constants/style\";\n\nconst IntroWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: fixed;\n  top: 50%;\n  margin: 0 8%;\n\n  ${MEDIA_QUERY_LG} {\n    display: none;\n  }\n`;\n\nconst IntroBadge = styled.h5`\n  margin: 10px 0;\n  font-family: \"Montserrat\", sans-serif;\n  color: #d1d1d1;\n`;\nconst AuthorName = styled.div`\n  color: #222222;\n  font-size: 18px;\n  font-weight: bold;\n  font-family: \"Archivo Black\", sans-serif;\n`;\n\nconst AuthorDesc = styled.p`\n  width: 150px;\n  color: #525252;\n  font-size: 14px;\n  overflow-wrap: break-word;\n\n  a {\n    color: #525252;\n    text-decoration: underline;\n  }\n`;\n\nconst AvatarWrapper = styled.div`\n  width: 150px;\n  margin: 0 auto;\n\n  img {\n    width: 50%;\n    object-fit: cover;\n  }\n`;\n\nexport default function Intro() {\n  return (\n    <IntroWrapper>\n      <AvatarWrapper>\n        <img src=\"images/avatar.png\" alt=\"\" />\n      </AvatarWrapper>\n      <IntroBadge>ABOUT</IntroBadge>\n      <AuthorName>Lidemy</AuthorName>\n      <AuthorDesc>\n        一個為初學者而生的線上程式課程平台\n        <a href=\"https://lidemy.com/\">https://lidemy.com/</a>\n      </AuthorDesc>\n    </IntroWrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { timeConverter } from \"../utills\";\nimport { MEDIA_QUERY_MD, MEDIA_QUERY_LG } from \"../constants/style\";\n\nconst PostWrapper = styled.div`\n  border-bottom: 1px solid #eeeeee;\n  margin-bottom: 20px;\n  padding: 25px 0;\n`;\nconst PostTitle = styled(Link)`\n  margin: 5px 0;\n  color: #212121;\n  font-size: 32px;\n  font-weight: bold;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.1em;\n  text-decoration: none;\n`;\n\nconst RelatedPostTitle = styled(Link)`\n  margin: 5px 0;\n  color: #212121;\n  font-size: 20px;\n  font-weight: bold;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.1em;\n  text-decoration: none;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nconst PostContent = styled.p`\n  color: #212121;\n  font-size: 22px;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.05em;\n  line-height: 1.5;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`;\n\nconst PostInfoTitle = styled.h2`\n  margin: 10px 0;\n  color: #212121;\n  font-size: 32px;\n  font-weight: bold;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.1em;\n`;\n\nconst PostAuthor = styled(Link)`\n  margin: 10px 0;\n  border: 1px solid #212121;\n  border-radius: 4px;\n  padding: 2px 5px;\n  color: #212121;\n  font-size: 14px;\n  font-family: \"微軟正黑體\";\n  text-decoration: none;\n`;\n\nconst PostBody = styled.p`\n  color: #212121;\n  font-size: 22px;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.05em;\n  line-height: 1.5;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n`;\n\nconst PostDate = styled.h5`\n  margin: 5px 0;\n  color: #d1d1d1;\n  font-size: 16px;\n  font-family: \"Montserrat\", sans-serif;\n`;\n\nconst BtnReadMore = styled(Link)`\n  color: #1a8917;\n  font-size: 14px;\n  font-family: \"Montserrat\", sans-serif;\n  text-decoration: none;\n`;\n\nconst RelatedPostWrapper = styled.div`\n  border: 1px solid #d1d1d1;\n  background: #fcfcfc;\n  border-radius: 10px;\n  padding: 20px;\n  width: 25%;\n  transition: all 0.3s ease-in;\n\n  &:hover {\n    transform: scale(1.04);\n  }\n\n  & + & {\n    margin-left: 20px;\n  }\n\n  ${MEDIA_QUERY_MD} {\n    width: 80%;\n    margin-bottom: 20px;\n\n    & + & {\n      margin-left: 0px;\n    }\n  }\n`;\n\nconst RelatedPostNum = styled.span`\n  font-size: 16px;\n  color: #212121;\n  letter-spacing: 0.1em;\n`;\nconst ArchiveContent = styled.p`\n  color: #212121;\n  font-size: 22px;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.05em;\n  line-height: 1.5;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nexport const RelatedTitle = styled.h4`\n  margin: 10px 0;\n  border-radius: 4px;\n  padding: 2px 5px;\n  color: #212121;\n  font-size: 20px;\n  font-family: \"微軟正黑體\";\n`;\n\nexport const ArchiveTitle = styled.h3`\n  margin: 20px 0;\n  padding: 10px 0;\n  color: #818181;\n  font-size: 28px;\n  text-decoration: underline;\n  font-family: \"微軟正黑體\";\n`;\nexport const HomePageRoot = styled.div``;\n\nexport const HomeWrapper = styled.div`\n  margin: 0 auto;\n  width: 50%;\n\n  ${MEDIA_QUERY_LG} {\n    width: 80%;\n  }\n`;\n\nexport const RelatedWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  padding-bottom: 10vh;\n\n  ${MEDIA_QUERY_MD} {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport function Post({ post }) {\n  const date = timeConverter(post.createdAt);\n  return (\n    <PostWrapper>\n      <PostDate>{date}</PostDate>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostContent>{post.body}</PostContent>\n      <BtnReadMore to={`/posts/${post.id}`}>Read more</BtnReadMore>\n    </PostWrapper>\n  );\n}\n\nexport function PostInfo({ post }) {\n  const date = timeConverter(post.createdAt);\n  return (\n    <PostWrapper>\n      <PostDate>{date}</PostDate>\n      <PostInfoTitle>{post.title}</PostInfoTitle>\n      {post.user.nickname && (\n        <PostAuthor to={`/user/${post.userId}`}>\n          {post.user.nickname}\n        </PostAuthor>\n      )}\n      <PostBody>{post.body}</PostBody>\n    </PostWrapper>\n  );\n}\n\nexport function RelatedPost({ order, post }) {\n  const date = timeConverter(post.createdAt);\n  return (\n    <RelatedPostWrapper>\n      <RelatedPostNum>#{order}</RelatedPostNum>\n      <RelatedPostTitle to={`/posts/${post.id}`}>{post.title}</RelatedPostTitle>\n      <PostDate>{date}</PostDate>\n    </RelatedPostWrapper>\n  );\n}\n\nexport function ArchiveItem({ post }) {\n  const date = timeConverter(post.createdAt);\n  return (\n    <PostWrapper>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{date}</PostDate>\n      <ArchiveContent>{post.body}</ArchiveContent>\n    </PostWrapper>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nPostInfo.propTypes = {\n  post: PropTypes.object,\n};\n\nRelatedPost.propTypes = {\n  post: PropTypes.object,\n};\n\nArchiveItem.propTypes = {\n  post: PropTypes.object,\n};\n","import { useEffect, useState } from \"react\";\nimport { getAllPosts } from \"../../WebAPI\";\nimport Intro from \"../../components/Intro\";\nimport { HomePageRoot, HomeWrapper, Post } from \"../../components/Home\";\n\nfunction HomePage() {\n  const [posts, setPosts] = useState([]);\n\n  // init\n  useEffect(() => {\n    getAllPosts().then((posts) => setPosts(posts));\n  }, []);\n\n  return (\n    <HomePageRoot>\n      <Intro />\n      <HomeWrapper>\n        {posts && posts.map((post) => <Post key={post.id} post={post} />)}\n      </HomeWrapper>\n    </HomePageRoot>\n  );\n}\n\nexport default HomePage;\n","import styled from \"styled-components\";\n\nexport const AboutWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 10vh auto;\n  padding: 20px;\n  width: 60%;\n`;\n\nexport const AboutBadge = styled.h5`\n  margin: 10px 0;\n  font-family: \"Montserrat\", sans-serif;\n  color: #d1d1d1;\n`;\n\nexport const AboutTitle = styled.div`\n  color: #222222;\n  font-size: 30px;\n  font-weight: bold;\n  font-family: \"Archivo Black\", sans-serif;\n`;\n\nexport const AboutDesc = styled.p`\n  color: #525252;\n  font-size: 16px;\n  overflow-wrap: break-word;\n\n  a {\n    color: #525252;\n    text-decoration: underline;\n  }\n  span {\n    color: #ca4141;\n  }\n`;\n\nexport const AboutAvatarWrapper = styled.div`\n  width: 150px;\n  margin: 30px;\n\n  img {\n    width: 100%;\n    object-fit: cover;\n  }\n`;\n","import {\n  AboutWrapper,\n  AboutAvatarWrapper,\n  AboutBadge,\n  AboutTitle,\n  AboutDesc,\n} from \"../../components/About\";\n\nfunction AboutPage() {\n  return (\n    <AboutWrapper>\n      <AboutAvatarWrapper>\n        <img src=\"images/avatar.png\" alt=\"\" />\n      </AboutAvatarWrapper>\n      <div>\n        <AboutBadge>ABOUT</AboutBadge>\n        <AboutTitle>第四期程式導師計畫</AboutTitle>\n        <AboutDesc>\n          不喊口號也不誇大成效，開放透明的 <span>網頁前後端線上學習計畫</span>\n          <br />\n          試著用六個月的時間，培養出一個找得到工作且基礎紮實的網頁工程師\n          <br />\n          <a href=\"https://bootcamp.lidemy.com/index.html\">\n            https://bootcamp.lidemy.com\n          </a>\n        </AboutDesc>\n      </div>\n    </AboutWrapper>\n  );\n}\n\nexport default AboutPage;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const LoginPageRoot = styled.div`\n  text-align: center;\n`;\n\nexport const LoginTitle = styled.h2`\n  font-size: 32px;\n  font-weight: bold;\n  color: #222222;\n`;\n\nexport const LoginDesc = styled.p`\n  font-size: 20px;\n  color: #222222;\n`;\n\nexport const LoginWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const LoginInputHint = styled.h6`\n  margin: 10px 0;\n  font-size: 14px;\n  font-weight: 300;\n  color: ${(props) => (props.verify ? \"#ca3e47\" : \"#222222\")};\n`;\n\nexport const LoginInput = styled.input`\n  margin-bottom: 20px;\n  border: none;\n  border-bottom: 1px solid ${(props) => (props.verify ? \"#ca3e47\" : \"#222222\")};\n  padding: 10px;\n  width: 20%;\n\n  &:focus {\n    outline: none;\n  }\n`;\nexport const ErrorMessage = styled.h5`\n  font-size: 16px;\n  color: #ca3e47;\n`;\n\nexport const BtnLogin = styled.button`\n  border: none;\n  background: #212121;\n  text-decoration: none;\n  margin: 20px 0;\n  padding: 8px 15px;\n  border-radius: 4px;\n  transition: all 0.3s ease-in-out;\n  cursor: pointer;\n  color: white;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\nexport const BtnBackToHome = styled(Link)`\n  color: #1a8917;\n  font-size: 14px;\n  font-family: \"Montserrat\", sans-serif;\n  text-decoration: none;\n`;\n","import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { login, getUserInfo } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utills\";\nimport { AuthContext } from \"../../contexts\";\nimport {\n  LoginPageRoot,\n  LoginTitle,\n  LoginDesc,\n  ErrorMessage,\n  LoginWrapper,\n  LoginInputHint,\n  LoginInput,\n  BtnLogin,\n  BtnBackToHome,\n} from \"../../components/Login\";\n\nfunction LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [account, setAccount] = useState(\"zoeaeen13\");\n  const [password, setPassword] = useState(\"Lidemy\");\n  const [isClicked, setClicked] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n\n  const handleInputChange = (e) => {\n    setErrorMessage(null);\n    if (e.target.name === \"account\") {\n      setAccount(e.target.value);\n    }\n\n    if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  const handleButtonClick = () => {\n    setClicked(true);\n    setErrorMessage(null);\n    if (!account || !password) {\n      return setErrorMessage(\"Please fill in the blank input box.\");\n    }\n\n    // call API\n    login(account, password).then((response) => {\n      if (!response.ok) {\n        return setErrorMessage(response.message);\n      }\n      setAuthToken(response.token);\n      getUserInfo().then((response) => {\n        if (!response.ok) {\n          return setErrorMessage(response.message);\n        }\n        setUser(response.data);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  return (\n    <LoginPageRoot>\n      <LoginTitle>Sign in with Account</LoginTitle>\n      <LoginDesc>Enter the account and password.</LoginDesc>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <LoginWrapper>\n        <LoginInputHint verify={isClicked && !account}>\n          Your account\n        </LoginInputHint>\n        <LoginInput\n          name=\"account\"\n          type=\"text\"\n          value={account}\n          onChange={handleInputChange}\n          verify={isClicked && !account}\n        />\n        <LoginInputHint verify={isClicked && !password}>\n          Your password\n        </LoginInputHint>\n        <LoginInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          onChange={handleInputChange}\n          verify={isClicked && !password}\n        />\n        <BtnLogin onClick={handleButtonClick}>Continue</BtnLogin>\n        <BtnBackToHome to=\"/\">back to Home</BtnBackToHome>\n      </LoginWrapper>\n    </LoginPageRoot>\n  );\n}\n\nexport default LoginPage;\n","import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { register, getUserInfo } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utills\";\nimport { AuthContext } from \"../../contexts\";\nimport {\n  LoginPageRoot,\n  LoginTitle,\n  LoginDesc,\n  ErrorMessage,\n  LoginWrapper,\n  LoginInputHint,\n  LoginInput,\n  BtnLogin,\n} from \"../../components/Login\";\n\nfunction RegisterPage() {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const password = \"Lidemy\";\n  const [isClicked, setClicked] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n\n  const handleInputChange = (e) => {\n    setErrorMessage(null);\n    if (e.target.name === \"username\") {\n      setUsername(e.target.value);\n    }\n\n    if (e.target.name === \"nickname\") {\n      setNickname(e.target.value);\n    }\n  };\n\n  const handleButtonClick = () => {\n    setClicked(true);\n    setErrorMessage(null);\n    if (!username || !nickname) {\n      return setErrorMessage(\"Please fill in the blank input box.\");\n    }\n\n    // call API\n    register(nickname, username, password).then((response) => {\n      if (!response.ok) {\n        return setErrorMessage(response.message);\n      }\n      setAuthToken(response.token);\n      getUserInfo().then((response) => {\n        if (!response.ok) {\n          return setErrorMessage(response.message);\n        }\n        setUser(response.data);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  return (\n    <LoginPageRoot>\n      <LoginTitle>Create a new account</LoginTitle>\n      <LoginDesc>Enter the your nickname and username.</LoginDesc>\n      <LoginDesc>\n        For testing, the password is set as default value 'Lidemy'.\n      </LoginDesc>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <LoginWrapper>\n        <LoginInputHint verify={isClicked && !nickname}>\n          Your nickname\n        </LoginInputHint>\n        <LoginInput\n          name=\"nickname\"\n          type=\"text\"\n          value={nickname}\n          onChange={handleInputChange}\n          verify={isClicked && !nickname}\n        />\n        <LoginInputHint verify={isClicked && !username}>\n          Your username\n        </LoginInputHint>\n        <LoginInput\n          name=\"username\"\n          type=\"text\"\n          value={username}\n          onChange={handleInputChange}\n          verify={isClicked && !username}\n        />\n        <LoginInputHint>Your password</LoginInputHint>\n        <LoginInput name=\"password\" type=\"password\" value={password} readonly />\n        <BtnLogin onClick={handleButtonClick}>Continue</BtnLogin>\n      </LoginWrapper>\n    </LoginPageRoot>\n  );\n}\n\nexport default RegisterPage;\n","import styled from \"styled-components\";\nimport { MEDIA_QUERY_LG } from \"../constants/style\";\n\nexport const NewPostForm = styled.form`\n  position: relative;\n`;\n\nexport const NewPostWrapper = styled.div`\n  text-align: center;\n  margin: 6vh auto;\n  border: none;\n  overflow: hidden;\n  border-radius: 2px;\n  box-sizing: border-box;\n  width: 60%;\n\n  ${MEDIA_QUERY_LG} {\n    width: 90%;\n  }\n`;\n\nexport const InputPostTitle = styled.input`\n  font-weight: bold;\n  font-size: 30px;\n  letter-spacing: 1px;\n  margin: 20px auto;\n  box-sizing: border-box;\n  border: none;\n  padding: 5px;\n  color: #292929;\n  width: 80%;\n\n  &:focus {\n    outline: none;\n  }\n`;\nexport const InputPostContent = styled.textarea`\n  margin: 20px auto;\n  color: #292929;\n  width: 80%;\n  border: 1px solid #d1d1d1;\n  border-radius: 5px;\n  font-size: 18px;\n  letter-spacing: 1px;\n  padding: 20px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const ErrorMessage = styled.h5`\n  font-size: 16px;\n  color: #ca3e47;\n`;\n\nexport const BtnPublish = styled.button`\n  position: absolute;\n  top: 0;\n  right: 50px;\n  margin: 20px 10px;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 14px;\n  font-size: 13px;\n  font-weight: bold;\n  background: #03a87c;\n  color: white;\n  cursor: pointer;\n  text-decoration: none;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover {\n    filter: brightness(1.1);\n  }\n`;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { addNewPost } from \"../../WebAPI\";\nimport {\n  NewPostForm,\n  NewPostWrapper,\n  InputPostTitle,\n  InputPostContent,\n  ErrorMessage,\n  BtnPublish,\n} from \"../../components/NewPost\";\n\nfunction NewPostPage() {\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleInputChange = (e) => {\n    setErrorMessage(null);\n    if (e.target.name === \"title\") {\n      setTitle(e.target.value);\n    }\n\n    if (e.target.name === \"content\") {\n      setContent(e.target.value);\n    }\n  };\n\n  const handleSubmitPost = (e) => {\n    e.preventDefault();\n    if (!title || !content) {\n      return setErrorMessage(\"Please fill in the blank for your article.\");\n    }\n\n    // call API\n    addNewPost(title, content).then((response) => {\n      if (!response.id) {\n        return setErrorMessage(response.message);\n      }\n      history.push(\"/\");\n    });\n  };\n\n  return (\n    <NewPostForm onSubmit={handleSubmitPost}>\n      <NewPostWrapper>\n        <InputPostTitle\n          name=\"title\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={handleInputChange}\n        />\n        <InputPostContent\n          name=\"content\"\n          placeholder=\"Write a story...\"\n          rows=\"10\"\n          cols=\"50\"\n          value={content}\n          onChange={handleInputChange}\n        ></InputPostContent>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </NewPostWrapper>\n      <BtnPublish>Publish</BtnPublish>\n    </NewPostForm>\n  );\n}\n\nexport default NewPostPage;\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getPostInfo, getUserPosts } from \"../../WebAPI\";\nimport {\n  HomePageRoot,\n  HomeWrapper,\n  PostInfo,\n  RelatedPost,\n  RelatedWrapper,\n  RelatedTitle,\n} from \"../../components/Home\";\nimport Intro from \"../../components/Intro\";\n\nfunction PostPage() {\n  let { slug } = useParams();\n  const [recentPost, setRecentPost] = useState(null);\n  const [userId, setUserId] = useState(0);\n  const [relatedPosts, setRelatedPosts] = useState(null);\n  console.log(\"rela\", relatedPosts);\n  // init\n  useEffect(() => {\n    getPostInfo(slug).then((postInfo) => {\n      setRecentPost(postInfo[0]);\n      setUserId(postInfo[0].userId);\n    });\n  }, [slug]);\n\n  useEffect(() => {\n    getUserPosts(userId).then((responseData) => {\n      if (responseData.id) {\n        const relatedAllPosts = responseData.posts.filter(\n          (post) => post.id !== Number(slug)\n        );\n        if (relatedAllPosts.length > 0) {\n          setRelatedPosts(relatedAllPosts.filter((post, index) => index < 3));\n        }\n      }\n    });\n  }, [slug, userId]);\n\n  return (\n    <HomePageRoot>\n      <Intro />\n      <HomeWrapper>\n        {recentPost && <PostInfo post={recentPost} />}\n        <RelatedTitle>同系列文章還有...</RelatedTitle>\n        <RelatedWrapper>\n          {relatedPosts &&\n            relatedPosts.map((post, index) => (\n              <RelatedPost key={post.id} order={index + 1} post={post} />\n            ))}\n          {!relatedPosts && <div>no related posts</div>}\n        </RelatedWrapper>\n      </HomeWrapper>\n    </HomePageRoot>\n  );\n}\n\nexport default PostPage;\n","import styled from \"styled-components\";\n\nconst PaginationWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n  width: 80%;\n  backgroudn: red;\n`;\n\nconst CurrentPage = styled.h5`\n  color: #212121;\n  font-size: 18px;\n  font-weight: bold;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.1em;\n  color: #818181;\n`;\n\nconst ArrowWrapper = styled.button`\n  width: 40px;\n  border: none;\n  background: transparent;\n  transition: 0.2s all ease-in;\n  cursor: pointer;\n  margin: 0 10px;\n\n  img {\n    width: 100%;\n    object-fit: cover;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover {\n    transform: scale(1.3);\n  }\n`;\n\nexport default function Pagination({ current, total, handleChangePage }) {\n  const handleNextPage = () => {\n    handleChangePage(current + 1);\n  };\n\n  const handlePreviouspage = () => {\n    handleChangePage(current - 1);\n  };\n\n  return (\n    <PaginationWrapper>\n      {current !== 1 && (\n        <ArrowWrapper onClick={handlePreviouspage}>\n          <img alt=\"\" src=\"./images/left-arrow.png\" />\n        </ArrowWrapper>\n      )}\n      <CurrentPage>目前第 {current} 頁</CurrentPage>\n      {current !== total && (\n        <ArrowWrapper onClick={handleNextPage}>\n          <img alt=\"\" src=\"./images/right-arrow.png\" />\n        </ArrowWrapper>\n      )}\n    </PaginationWrapper>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { getAllPosts, getUserPosts } from \"../../WebAPI\";\nimport { useParams } from \"react-router-dom\";\nimport Intro from \"../../components/Intro\";\nimport Pagination from \"../../components/Pagination\";\nimport {\n  HomePageRoot,\n  HomeWrapper,\n  ArchiveItem,\n  ArchiveTitle,\n} from \"../../components/Home\";\n\nfunction ArchivePage() {\n  let { slug } = useParams();\n  const [userPosts, setUserPosts] = useState([]);\n  const [author, setAuthor] = useState(null);\n  const [archivePosts, setArchivePosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPage, setTotalPage] = useState(0);\n  const [recentPosts, setRecentPosts] = useState([]);\n  const handleChangePage = (page) => {\n    setCurrentPage(page);\n  };\n\n  // init\n  useEffect(() => {\n    // specific user posts\n    if (slug) {\n      getUserPosts(slug).then((response) => {\n        if (response.posts.length > 0) {\n          setUserPosts(response.posts.reverse());\n        }\n        setAuthor({\n          nickname: response.nickname,\n          postNum: response.posts.length,\n        });\n      });\n    } else {\n      // archive\n      getAllPosts().then((posts) => {\n        if (posts.length > 0) {\n          let quotient = Math.ceil(posts.length / 5);\n          if (!posts.length % 5) {\n            quotient += 1;\n          }\n          setArchivePosts(posts);\n          setCurrentPage(1);\n          setTotalPage(quotient);\n        }\n      });\n    }\n  }, [slug]);\n\n  // change pages\n  useEffect(() => {\n    const index = (currentPage - 1) * 5;\n    setRecentPosts(archivePosts.slice(index, index + 5));\n  }, [archivePosts, currentPage]);\n\n  return (\n    <HomePageRoot>\n      <Intro />\n      <HomeWrapper>\n        {!slug && <ArchiveTitle>所有文章</ArchiveTitle>}\n        {slug && author && (\n          <ArchiveTitle>\n            '{author.nickname}' 目前發表了 {author.postNum} 篇文章\n          </ArchiveTitle>\n        )}\n        {recentPosts &&\n          recentPosts.map((post) => <ArchiveItem key={post.id} post={post} />)}\n        {slug &&\n          userPosts.map((post) => <ArchiveItem key={post.id} post={post} />)}\n        {!slug && recentPosts && totalPage && (\n          <Pagination\n            current={currentPage}\n            total={totalPage}\n            handleChangePage={handleChangePage}\n          />\n        )}\n      </HomeWrapper>\n    </HomePageRoot>\n  );\n}\n\nexport default ArchivePage;\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport HomePage from \"../pages/Home\";\nimport AboutPage from \"../pages/About\";\nimport LoginPage from \"../pages/Login\";\nimport RegisterPage from \"../pages/Register\";\nimport NewPostPage from \"../pages/NewPost\";\nimport PostPage from \"../pages/Post\";\nimport ArchivePage from \"../pages/Archive\";\nimport { AuthContext } from \"../contexts\";\nimport { getUserInfo } from \"../WebAPI\";\nimport { getAuthToken, setAuthToken } from \"../utills\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // init login status\n    if (getAuthToken()) {\n      getUserInfo().then((response) => {\n        if (!response.ok) {\n          return setAuthToken(null);\n        }\n        setUser(response.data);\n      });\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <div>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/about\">\n              <AboutPage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route path=\"/post\">\n              <NewPostPage />\n            </Route>\n            <Route path=\"/archive\">\n              <ArchivePage />\n            </Route>\n            <Route path=\"/posts/:slug\">\n              <PostPage />\n            </Route>\n            <Route path=\"/user/:slug\">\n              <ArchivePage />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}