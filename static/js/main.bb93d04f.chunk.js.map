{"version":3,"sources":["utills.js","constants/style.js","components/Home.js","contexts.js","components/Header.js","WebAPI.js","components/Intro.js","pages/Home/HomePage.js","components/About.js","pages/About/AboutPage.js","components/Login.js","pages/Login/LoginPage.js","pages/Register/RegisterPage.js","components/NewPost.js","pages/NewPost/NewPostPage.js","pages/Post/PostPage.js","components/Pagination.js","pages/Archive/ArchivePage.js","components/App.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","timeConverter","timestamp","date","Date","getMonth","getDate","getFullYear","MEDIA_QUERY_MD","MEDIA_QUERY_LG","PostWrapper","styled","div","PostTitle","Link","RelatedPostTitle","PostContent","p","PostInfoTitle","h2","PostAuthor","PostBody","PostDate","h5","BtnReadMore","RelatedPostWrapper","RelatedPostNum","span","ArchiveContent","AppWrapper","RelatedTitle","h4","ArchiveTitle","h3","HomePageRoot","HomeWrapper","RelatedWrapper","Post","post","createdAt","to","id","title","body","PostInfo","user","nickname","userId","RelatedPost","order","ArchiveItem","AuthContext","createContext","Nav","BlogLogo","Wrapper","NavItem","props","$active","BtnLogin","BtnLogout","button","BtnPost","Header","location","useLocation","history","useHistory","isPosting","pathname","useContext","setUser","onClick","push","BASE_URL","getArchivePosts","pageNum","fetch","then","res","getUserPosts","json","getUserInfo","headers","authorization","IntroWrapper","IntroBadge","AuthorName","AuthorDesc","AvatarWrapper","Intro","src","alt","href","HomePage","useState","posts","setPosts","useEffect","map","AboutWrapper","AboutBadge","AboutTitle","AboutDesc","AboutAvatarWrapper","AboutPage","LoginPageRoot","LoginTitle","LoginDesc","LoginWrapper","LoginInputHint","h6","verify","LoginInput","input","ErrorMessage","BtnBackToHome","LoginPage","account","setAccount","password","setPassword","isClicked","setClicked","errorMessage","setErrorMessage","handleInputChange","e","target","name","value","type","onChange","username","method","JSON","stringify","login","response","ok","message","data","RegisterPage","setUsername","setNickname","readonly","register","NewPostForm","form","NewPostWrapper","InputPostTitle","InputPostContent","textarea","BtnPublish","NewPostPage","setTitle","content","setContent","onSubmit","preventDefault","addNewPost","placeholder","rows","cols","PostPage","slug","useParams","recentPost","setRecentPost","setUserId","relatedPosts","setRelatedPosts","console","log","postInfo","responseData","relatedAllPosts","filter","Number","length","index","PaginationWrapper","CurrentPage","ArrowWrapper","Pagination","current","total","handleChangePage","ArchivePage","userPosts","setUserPosts","author","setAuthor","archivePosts","setArchivePosts","currentPage","setCurrentPage","totalPage","setTotalPage","reverse","postNum","get","quotient","Math","ceil","page","App","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb93d04f.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n\nexport function timeConverter(timestamp) {\n  let date = new Date(timestamp);\n  let months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  return (\n    months[date.getMonth()] + \" \" + date.getDate() + \", \" + date.getFullYear()\n  );\n}\n","export const MEDIA_QUERY_MD = \"@media (max-width: 576px)\";\nexport const MEDIA_QUERY_LG = \"@media (max-width: 768px)\";\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { timeConverter } from \"../utills\";\nimport { MEDIA_QUERY_MD, MEDIA_QUERY_LG } from \"../constants/style\";\n\nconst PostWrapper = styled.div`\n  border-bottom: 1px solid #eeeeee;\n  margin-bottom: 20px;\n  padding: 25px 0;\n`;\nconst PostTitle = styled(Link)`\n  margin: 5px 0;\n  color: #212121;\n  font-size: 32px;\n  font-weight: bold;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.1em;\n  text-decoration: none;\n`;\n\nconst RelatedPostTitle = styled(Link)`\n  margin: 5px 0;\n  color: #212121;\n  font-size: 20px;\n  font-weight: bold;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.1em;\n  text-decoration: none;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nconst PostContent = styled.p`\n  color: #212121;\n  font-size: 22px;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.05em;\n  line-height: 1.5;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`;\n\nconst PostInfoTitle = styled.h2`\n  margin: 10px 0;\n  color: #212121;\n  font-size: 32px;\n  font-weight: bold;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.1em;\n`;\n\nconst PostAuthor = styled(Link)`\n  margin: 10px 0;\n  border: 1px solid #212121;\n  border-radius: 4px;\n  padding: 2px 5px;\n  color: #212121;\n  font-size: 14px;\n  font-family: \"微軟正黑體\";\n  text-decoration: none;\n`;\n\nconst PostBody = styled.p`\n  color: #212121;\n  font-size: 22px;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.05em;\n  line-height: 1.5;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n`;\n\nconst PostDate = styled.h5`\n  margin: 5px 0;\n  color: #d1d1d1;\n  font-size: 16px;\n  font-family: \"Montserrat\", sans-serif;\n`;\n\nconst BtnReadMore = styled(Link)`\n  color: #1a8917;\n  font-size: 14px;\n  font-family: \"Montserrat\", sans-serif;\n  text-decoration: none;\n`;\n\nconst RelatedPostWrapper = styled.div`\n  border: 1px solid #d1d1d1;\n  background: #fcfcfc;\n  border-radius: 10px;\n  padding: 20px;\n  width: 25%;\n  transition: all 0.3s ease-in;\n\n  &:hover {\n    transform: scale(1.04);\n  }\n\n  & + & {\n    margin-left: 20px;\n  }\n\n  ${MEDIA_QUERY_MD} {\n    width: 80%;\n    margin-bottom: 20px;\n\n    & + & {\n      margin-left: 0px;\n    }\n  }\n`;\n\nconst RelatedPostNum = styled.span`\n  font-size: 16px;\n  color: #212121;\n  letter-spacing: 0.1em;\n`;\nconst ArchiveContent = styled.p`\n  color: #212121;\n  font-size: 22px;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.05em;\n  line-height: 1.5;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nexport const AppWrapper = styled.div`\n  padding-top: 15vh;\n`;\n\nexport const RelatedTitle = styled.h4`\n  margin: 10px 0;\n  border-radius: 4px;\n  padding: 2px 5px;\n  color: #212121;\n  font-size: 20px;\n  font-family: \"微軟正黑體\";\n`;\n\nexport const ArchiveTitle = styled.h3`\n  margin: 20px 0;\n  padding: 10px 0;\n  color: #818181;\n  font-size: 28px;\n  text-decoration: underline;\n  font-family: \"微軟正黑體\";\n`;\nexport const HomePageRoot = styled.div``;\n\nexport const HomeWrapper = styled.div`\n  margin: 0 auto;\n  width: 50%;\n\n  ${MEDIA_QUERY_LG} {\n    width: 80%;\n  }\n`;\n\nexport const RelatedWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  padding-bottom: 10vh;\n\n  ${MEDIA_QUERY_MD} {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport function Post({ post }) {\n  const date = timeConverter(post.createdAt);\n  return (\n    <PostWrapper>\n      <PostDate>{date}</PostDate>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostContent>{post.body}</PostContent>\n      <BtnReadMore to={`/posts/${post.id}`}>Read more</BtnReadMore>\n    </PostWrapper>\n  );\n}\n\nexport function PostInfo({ post }) {\n  const date = timeConverter(post.createdAt);\n  return (\n    <PostWrapper>\n      <PostDate>{date}</PostDate>\n      <PostInfoTitle>{post.title}</PostInfoTitle>\n      {post.user.nickname && (\n        <PostAuthor to={`/user/${post.userId}`}>\n          {post.user.nickname}\n        </PostAuthor>\n      )}\n      <PostBody>{post.body}</PostBody>\n    </PostWrapper>\n  );\n}\n\nexport function RelatedPost({ order, post }) {\n  const date = timeConverter(post.createdAt);\n  return (\n    <RelatedPostWrapper>\n      <RelatedPostNum>#{order}</RelatedPostNum>\n      <RelatedPostTitle to={`/posts/${post.id}`}>{post.title}</RelatedPostTitle>\n      <PostDate>{date}</PostDate>\n    </RelatedPostWrapper>\n  );\n}\n\nexport function ArchiveItem({ post }) {\n  const date = timeConverter(post.createdAt);\n  return (\n    <PostWrapper>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{date}</PostDate>\n      <ArchiveContent>{post.body}</ArchiveContent>\n    </PostWrapper>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nPostInfo.propTypes = {\n  post: PropTypes.object,\n};\n\nRelatedPost.propTypes = {\n  order: PropTypes.number,\n  post: PropTypes.object,\n};\n\nArchiveItem.propTypes = {\n  post: PropTypes.object,\n};\n","import { createContext } from \"react\";\nexport const AuthContext = createContext(null);\n","import styled from \"styled-components\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../contexts\";\nimport { setAuthToken } from \"../utills\";\nimport { MEDIA_QUERY_MD } from \"../constants/style\";\n\nconst Nav = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #eeeeee;\n  padding: 10px;\n  background: white;\n\n  ${MEDIA_QUERY_MD} {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst BlogLogo = styled.div`\n  margin: 0 30px;\n  color: #222222;\n  font-size: 28px;\n  font-weight: bold;\n  font-family: \"Archivo Black\", sans-serif;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst NavItem = styled(Link)`\n  color: #d1d1d1;\n  text-decoration: none;\n  padding: 10px;\n\n  &:hover {\n    color: #222222;\n    filter: brightness(1.05);\n  }\n\n  ${(props) => props.$active && \"color: #222222;\"};\n`;\n\nconst BtnLogin = styled(Link)`\n  margin: 0 10px;\n  border-radius: 4px;\n  padding: 8px 15px;\n  background: #212121;\n  color: white;\n  transition: all 0.3s ease-in;\n  text-decoration: none;\n\n  &:hover {\n    background: #414141;\n  }\n`;\nconst BtnLogout = styled.button`\n  background: #212121;\n  color: white;\n  padding: 8px 15px;\n  border-radius: 4px;\n  transition: all 0.2s ease-in;\n  cursor: pointer;\n\n  &:hover {\n    background: #414141;\n  }\n`;\n\nconst BtnPost = styled(BtnLogin)`\n  box-sizing: border-box;\n  background: white;\n  border: 1px solid #212121;\n  color: #212121;\n\n  &:hover {\n    background: #eeeeee;\n    border-color: white;\n  }\n`;\n\nexport default function Header() {\n  let location = useLocation();\n  const history = useHistory();\n  const isPosting = location.pathname === \"/post\";\n  const { user, setUser } = useContext(AuthContext);\n\n  const handleLogout = () => {\n    setAuthToken(null);\n    setUser(null);\n\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <Nav>\n      <Wrapper>\n        <BlogLogo>LIDEMY</BlogLogo>\n        <NavItem to=\"/\" $active={location.pathname === \"/\"}>\n          Home\n        </NavItem>\n        <NavItem to=\"/archive\" $active={location.pathname === \"/archive\"}>\n          Archive\n        </NavItem>\n        <NavItem to=\"/about\" $active={location.pathname === \"/about\"}>\n          About\n        </NavItem>\n      </Wrapper>\n      <div>\n        {!user && <BtnLogin to=\"/register\">Sign up</BtnLogin>}\n        {!user && <BtnLogin to=\"/login\">Log in</BtnLogin>}\n        {user && !isPosting && (\n          <BtnLogout onClick={handleLogout}>Sign out</BtnLogout>\n        )}\n        {user && !isPosting && <BtnPost to=\"/post\">New Post</BtnPost>}\n      </div>\n    </Nav>\n  );\n}\n","import { getAuthToken } from \"./utills\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getAllPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getArchivePosts = (pageNum) => {\n  return fetch(\n    `${BASE_URL}/posts?_limit=5&_page=${pageNum}&_sort=createdAt&_order=desc`\n  ).then((res) => res);\n};\n\nexport const getPostInfo = (id) => {\n  return fetch(`${BASE_URL}/posts?id=${id}&_expand=user`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getUserPosts = (userId) => {\n  return fetch(`${BASE_URL}/users/${userId}?_embed=posts`).then((res) =>\n    res.json()\n  );\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname: nickname,\n      username: username,\n      password: password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getUserInfo = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const addNewPost = (title, content) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title: title,\n      body: content,\n    }),\n  }).then((res) => res.json());\n};\n","import styled from \"styled-components\";\nimport { MEDIA_QUERY_LG } from \"../constants/style\";\n\nconst IntroWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: fixed;\n  top: 50%;\n  margin: 0 8%;\n\n  ${MEDIA_QUERY_LG} {\n    display: none;\n  }\n`;\n\nconst IntroBadge = styled.h5`\n  margin: 10px 0;\n  font-family: \"Montserrat\", sans-serif;\n  color: #d1d1d1;\n`;\nconst AuthorName = styled.div`\n  color: #222222;\n  font-size: 18px;\n  font-weight: bold;\n  font-family: \"Archivo Black\", sans-serif;\n`;\n\nconst AuthorDesc = styled.p`\n  width: 150px;\n  color: #525252;\n  font-size: 14px;\n  overflow-wrap: break-word;\n\n  a {\n    color: #525252;\n    text-decoration: underline;\n  }\n`;\n\nconst AvatarWrapper = styled.div`\n  width: 150px;\n  margin: 0 auto;\n\n  img {\n    width: 50%;\n    object-fit: cover;\n  }\n`;\n\nexport default function Intro() {\n  return (\n    <IntroWrapper>\n      <AvatarWrapper>\n        <img src=\"images/avatar.png\" alt=\"\" />\n      </AvatarWrapper>\n      <IntroBadge>ABOUT</IntroBadge>\n      <AuthorName>Lidemy</AuthorName>\n      <AuthorDesc>\n        一個為初學者而生的線上程式課程平台\n        <a href=\"https://lidemy.com/\">https://lidemy.com/</a>\n      </AuthorDesc>\n    </IntroWrapper>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { getAllPosts } from \"../../WebAPI\";\nimport Intro from \"../../components/Intro\";\nimport { HomePageRoot, HomeWrapper, Post } from \"../../components/Home\";\n\nfunction HomePage() {\n  const [posts, setPosts] = useState([]);\n\n  // init\n  useEffect(() => {\n    getAllPosts().then((posts) => setPosts(posts));\n  }, []);\n\n  return (\n    <HomePageRoot>\n      <Intro />\n      <HomeWrapper>\n        {posts && posts.map((post) => <Post key={post.id} post={post} />)}\n      </HomeWrapper>\n    </HomePageRoot>\n  );\n}\n\nexport default HomePage;\n","import styled from \"styled-components\";\n\nexport const AboutWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 10vh auto;\n  padding: 20px;\n  width: 60%;\n`;\n\nexport const AboutBadge = styled.h5`\n  margin: 10px 0;\n  font-family: \"Montserrat\", sans-serif;\n  color: #d1d1d1;\n`;\n\nexport const AboutTitle = styled.div`\n  color: #222222;\n  font-size: 30px;\n  font-weight: bold;\n  font-family: \"Archivo Black\", sans-serif;\n`;\n\nexport const AboutDesc = styled.p`\n  color: #525252;\n  font-size: 16px;\n  overflow-wrap: break-word;\n\n  a {\n    color: #525252;\n    text-decoration: underline;\n  }\n  span {\n    color: #ca4141;\n  }\n`;\n\nexport const AboutAvatarWrapper = styled.div`\n  width: 150px;\n  margin: 30px;\n\n  img {\n    width: 100%;\n    object-fit: cover;\n  }\n`;\n","import {\n  AboutWrapper,\n  AboutAvatarWrapper,\n  AboutBadge,\n  AboutTitle,\n  AboutDesc,\n} from \"../../components/About\";\n\nfunction AboutPage() {\n  return (\n    <AboutWrapper>\n      <AboutAvatarWrapper>\n        <img src=\"images/avatar.png\" alt=\"\" />\n      </AboutAvatarWrapper>\n      <div>\n        <AboutBadge>ABOUT</AboutBadge>\n        <AboutTitle>第四期程式導師計畫</AboutTitle>\n        <AboutDesc>\n          不喊口號也不誇大成效，開放透明的 <span>網頁前後端線上學習計畫</span>\n          <br />\n          試著用六個月的時間，培養出一個找得到工作且基礎紮實的網頁工程師\n          <br />\n          <a href=\"https://bootcamp.lidemy.com/index.html\">\n            https://bootcamp.lidemy.com\n          </a>\n        </AboutDesc>\n      </div>\n    </AboutWrapper>\n  );\n}\n\nexport default AboutPage;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const LoginPageRoot = styled.div`\n  text-align: center;\n`;\n\nexport const LoginTitle = styled.h2`\n  font-size: 32px;\n  font-weight: bold;\n  color: #222222;\n`;\n\nexport const LoginDesc = styled.p`\n  font-size: 20px;\n  color: #222222;\n`;\n\nexport const LoginWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const LoginInputHint = styled.h6`\n  margin: 10px 0;\n  font-size: 14px;\n  font-weight: 300;\n  color: ${(props) => (props.verify ? \"#ca3e47\" : \"#222222\")};\n`;\n\nexport const LoginInput = styled.input`\n  margin-bottom: 20px;\n  border: none;\n  border-bottom: 1px solid ${(props) => (props.verify ? \"#ca3e47\" : \"#222222\")};\n  padding: 10px;\n  width: 20%;\n\n  &:focus {\n    outline: none;\n  }\n`;\nexport const ErrorMessage = styled.h5`\n  font-size: 16px;\n  color: #ca3e47;\n`;\n\nexport const BtnLogin = styled.button`\n  border: none;\n  background: #212121;\n  text-decoration: none;\n  margin: 20px 0;\n  padding: 8px 15px;\n  border-radius: 4px;\n  transition: all 0.3s ease-in-out;\n  cursor: pointer;\n  color: white;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\nexport const BtnBackToHome = styled(Link)`\n  color: #1a8917;\n  font-size: 14px;\n  font-family: \"Montserrat\", sans-serif;\n  text-decoration: none;\n`;\n","import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { login, getUserInfo } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utills\";\nimport { AuthContext } from \"../../contexts\";\nimport {\n  LoginPageRoot,\n  LoginTitle,\n  LoginDesc,\n  ErrorMessage,\n  LoginWrapper,\n  LoginInputHint,\n  LoginInput,\n  BtnLogin,\n  BtnBackToHome,\n} from \"../../components/Login\";\n\nfunction LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [account, setAccount] = useState(\"zoeaeen13\");\n  const [password, setPassword] = useState(\"Lidemy\");\n  const [isClicked, setClicked] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n\n  const handleInputChange = (e) => {\n    setErrorMessage(null);\n    if (e.target.name === \"account\") {\n      setAccount(e.target.value);\n    }\n\n    if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  const handleButtonClick = () => {\n    setClicked(true);\n    setErrorMessage(null);\n    if (!account || !password) {\n      return setErrorMessage(\"Please fill in the blank input box.\");\n    }\n\n    // call API\n    login(account, password).then((response) => {\n      if (!response.ok) {\n        return setErrorMessage(response.message);\n      }\n      setAuthToken(response.token);\n      getUserInfo().then((response) => {\n        if (!response.ok) {\n          return setErrorMessage(response.message);\n        }\n        setUser(response.data);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  return (\n    <LoginPageRoot>\n      <LoginTitle>Sign in with Account</LoginTitle>\n      <LoginDesc>Enter the account and password.</LoginDesc>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <LoginWrapper>\n        <LoginInputHint verify={isClicked && !account}>\n          Your account\n        </LoginInputHint>\n        <LoginInput\n          name=\"account\"\n          type=\"text\"\n          value={account}\n          onChange={handleInputChange}\n          verify={isClicked && !account}\n        />\n        <LoginInputHint verify={isClicked && !password}>\n          Your password\n        </LoginInputHint>\n        <LoginInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          onChange={handleInputChange}\n          verify={isClicked && !password}\n        />\n        <BtnLogin onClick={handleButtonClick}>Continue</BtnLogin>\n        <BtnBackToHome to=\"/\">back to Home</BtnBackToHome>\n      </LoginWrapper>\n    </LoginPageRoot>\n  );\n}\n\nexport default LoginPage;\n","import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { register, getUserInfo } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utills\";\nimport { AuthContext } from \"../../contexts\";\nimport {\n  LoginPageRoot,\n  LoginTitle,\n  LoginDesc,\n  ErrorMessage,\n  LoginWrapper,\n  LoginInputHint,\n  LoginInput,\n  BtnLogin,\n} from \"../../components/Login\";\n\nfunction RegisterPage() {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const password = \"Lidemy\";\n  const [isClicked, setClicked] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n\n  const handleInputChange = (e) => {\n    setErrorMessage(null);\n    if (e.target.name === \"username\") {\n      setUsername(e.target.value);\n    }\n\n    if (e.target.name === \"nickname\") {\n      setNickname(e.target.value);\n    }\n  };\n\n  const handleButtonClick = () => {\n    setClicked(true);\n    setErrorMessage(null);\n    if (!username || !nickname) {\n      return setErrorMessage(\"Please fill in the blank input box.\");\n    }\n\n    // call API\n    register(nickname, username, password).then((response) => {\n      if (!response.ok) {\n        return setErrorMessage(response.message);\n      }\n      setAuthToken(response.token);\n      getUserInfo().then((response) => {\n        if (!response.ok) {\n          return setErrorMessage(response.message);\n        }\n        setUser(response.data);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  return (\n    <LoginPageRoot>\n      <LoginTitle>Create a new account</LoginTitle>\n      <LoginDesc>Enter the your nickname and username.</LoginDesc>\n      <LoginDesc>\n        For testing, the password is set as default value 'Lidemy'.\n      </LoginDesc>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <LoginWrapper>\n        <LoginInputHint verify={isClicked && !nickname}>\n          Your nickname\n        </LoginInputHint>\n        <LoginInput\n          name=\"nickname\"\n          type=\"text\"\n          value={nickname}\n          onChange={handleInputChange}\n          verify={isClicked && !nickname}\n        />\n        <LoginInputHint verify={isClicked && !username}>\n          Your username\n        </LoginInputHint>\n        <LoginInput\n          name=\"username\"\n          type=\"text\"\n          value={username}\n          onChange={handleInputChange}\n          verify={isClicked && !username}\n        />\n        <LoginInputHint>Your password</LoginInputHint>\n        <LoginInput name=\"password\" type=\"password\" value={password} readonly />\n        <BtnLogin onClick={handleButtonClick}>Continue</BtnLogin>\n      </LoginWrapper>\n    </LoginPageRoot>\n  );\n}\n\nexport default RegisterPage;\n","import styled from \"styled-components\";\nimport { MEDIA_QUERY_LG } from \"../constants/style\";\n\nexport const NewPostForm = styled.form`\n  position: relative;\n`;\n\nexport const NewPostWrapper = styled.div`\n  text-align: center;\n  margin: 6vh auto;\n  border: none;\n  overflow: hidden;\n  border-radius: 2px;\n  box-sizing: border-box;\n  width: 60%;\n\n  ${MEDIA_QUERY_LG} {\n    width: 90%;\n  }\n`;\n\nexport const InputPostTitle = styled.input`\n  font-weight: bold;\n  font-size: 30px;\n  letter-spacing: 1px;\n  margin: 20px auto;\n  box-sizing: border-box;\n  border: none;\n  padding: 5px;\n  color: #292929;\n  width: 80%;\n\n  &:focus {\n    outline: none;\n  }\n`;\nexport const InputPostContent = styled.textarea`\n  margin: 20px auto;\n  color: #292929;\n  width: 80%;\n  border: 1px solid #d1d1d1;\n  border-radius: 5px;\n  font-size: 18px;\n  letter-spacing: 1px;\n  padding: 20px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const ErrorMessage = styled.h5`\n  font-size: 16px;\n  color: #ca3e47;\n`;\n\nexport const BtnPublish = styled.button`\n  position: absolute;\n  top: 0;\n  right: 50px;\n  margin: 20px 10px;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 14px;\n  font-size: 13px;\n  font-weight: bold;\n  background: #03a87c;\n  color: white;\n  cursor: pointer;\n  text-decoration: none;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover {\n    filter: brightness(1.1);\n  }\n`;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { addNewPost } from \"../../WebAPI\";\nimport {\n  NewPostForm,\n  NewPostWrapper,\n  InputPostTitle,\n  InputPostContent,\n  ErrorMessage,\n  BtnPublish,\n} from \"../../components/NewPost\";\n\nfunction NewPostPage() {\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleInputChange = (e) => {\n    setErrorMessage(null);\n    if (e.target.name === \"title\") {\n      setTitle(e.target.value);\n    }\n\n    if (e.target.name === \"content\") {\n      setContent(e.target.value);\n    }\n  };\n\n  const handleSubmitPost = (e) => {\n    e.preventDefault();\n    if (!title || !content) {\n      return setErrorMessage(\"Please fill in the blank for your article.\");\n    }\n\n    // call API\n    addNewPost(title, content).then((response) => {\n      if (!response.id) {\n        return setErrorMessage(response.message);\n      }\n      history.push(\"/\");\n    });\n  };\n\n  return (\n    <NewPostForm onSubmit={handleSubmitPost}>\n      <NewPostWrapper>\n        <InputPostTitle\n          name=\"title\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={handleInputChange}\n        />\n        <InputPostContent\n          name=\"content\"\n          placeholder=\"Write a story...\"\n          rows=\"10\"\n          cols=\"50\"\n          value={content}\n          onChange={handleInputChange}\n        ></InputPostContent>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </NewPostWrapper>\n      <BtnPublish>Publish</BtnPublish>\n    </NewPostForm>\n  );\n}\n\nexport default NewPostPage;\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getPostInfo, getUserPosts } from \"../../WebAPI\";\nimport {\n  HomePageRoot,\n  HomeWrapper,\n  PostInfo,\n  RelatedPost,\n  RelatedWrapper,\n  RelatedTitle,\n} from \"../../components/Home\";\nimport Intro from \"../../components/Intro\";\n\nfunction PostPage() {\n  let { slug } = useParams();\n  const [recentPost, setRecentPost] = useState(null);\n  const [userId, setUserId] = useState(0);\n  const [relatedPosts, setRelatedPosts] = useState(null);\n  console.log(\"rela\", relatedPosts);\n  // init\n  useEffect(() => {\n    getPostInfo(slug).then((postInfo) => {\n      setRecentPost(postInfo[0]);\n      setUserId(postInfo[0].userId);\n    });\n  }, [slug]);\n\n  useEffect(() => {\n    getUserPosts(userId).then((responseData) => {\n      if (responseData.id) {\n        const relatedAllPosts = responseData.posts.filter(\n          (post) => post.id !== Number(slug)\n        );\n        if (relatedAllPosts.length > 0) {\n          setRelatedPosts(relatedAllPosts.filter((post, index) => index < 3));\n        }\n      }\n    });\n  }, [slug, userId]);\n\n  return (\n    <HomePageRoot>\n      <Intro />\n      <HomeWrapper>\n        {recentPost && <PostInfo post={recentPost} />}\n        <RelatedTitle>同系列文章還有...</RelatedTitle>\n        <RelatedWrapper>\n          {relatedPosts &&\n            relatedPosts.map((post, index) => (\n              <RelatedPost key={post.id} order={index + 1} post={post} />\n            ))}\n          {!relatedPosts && <div>no related posts</div>}\n        </RelatedWrapper>\n      </HomeWrapper>\n    </HomePageRoot>\n  );\n}\n\nexport default PostPage;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst PaginationWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n  width: 80%;\n  backgroudn: red;\n`;\n\nconst CurrentPage = styled.h5`\n  color: #212121;\n  font-size: 18px;\n  font-weight: bold;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.1em;\n  color: #818181;\n`;\n\nconst ArrowWrapper = styled.button`\n  width: 40px;\n  border: none;\n  background: transparent;\n  transition: 0.2s all ease-in;\n  cursor: pointer;\n  margin: 0 10px;\n\n  img {\n    width: 100%;\n    object-fit: cover;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover {\n    transform: scale(1.3);\n  }\n`;\n\nexport default function Pagination({ current, total, handleChangePage }) {\n  const handleNextPage = () => {\n    handleChangePage(current + 1);\n  };\n\n  const handlePreviouspage = () => {\n    handleChangePage(current - 1);\n  };\n\n  return (\n    <PaginationWrapper>\n      {current !== 1 && (\n        <ArrowWrapper onClick={handlePreviouspage}>\n          <img alt=\"\" src=\"./images/left-arrow.png\" />\n        </ArrowWrapper>\n      )}\n      <CurrentPage>目前第 {current} 頁</CurrentPage>\n      {current !== total && (\n        <ArrowWrapper onClick={handleNextPage}>\n          <img alt=\"\" src=\"./images/right-arrow.png\" />\n        </ArrowWrapper>\n      )}\n    </PaginationWrapper>\n  );\n}\n\nPagination.propTypes = {\n  current: PropTypes.number,\n  total: PropTypes.number,\n  handleChangePage: PropTypes.func,\n};\n","import { useEffect, useState } from \"react\";\nimport { getUserPosts, getArchivePosts } from \"../../WebAPI\";\nimport { useParams } from \"react-router-dom\";\nimport Intro from \"../../components/Intro\";\nimport Pagination from \"../../components/Pagination\";\nimport {\n  HomePageRoot,\n  HomeWrapper,\n  ArchiveItem,\n  ArchiveTitle,\n} from \"../../components/Home\";\n\nfunction ArchivePage() {\n  let { slug } = useParams();\n  const [userPosts, setUserPosts] = useState([]);\n  const [author, setAuthor] = useState(null);\n  const [archivePosts, setArchivePosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(0);\n  // const [recentPosts, setRecentPosts] = useState([]);\n  const handleChangePage = (page) => {\n    setCurrentPage(page);\n  };\n\n  // init\n  useEffect(() => {\n    // specific user posts\n    if (slug) {\n      getUserPosts(slug).then((response) => {\n        if (response.posts.length > 0) {\n          setUserPosts(response.posts.reverse());\n        }\n        setAuthor({\n          nickname: response.nickname,\n          postNum: response.posts.length,\n        });\n      });\n    } else {\n      // archive\n      getArchivePosts(1)\n        .then((res) => {\n          if (res.headers.get(\"X-Total-Count\")) {\n            const total = Number(res.headers.get(\"X-Total-Count\"));\n            let quotient = Math.ceil(total / 5);\n            if (!total % 5) {\n              quotient += 1;\n            }\n            console.log(\"totalPage\", quotient);\n            setTotalPage(quotient);\n            return res.json();\n          }\n        })\n        .then((posts) => {\n          console.log(\"posts\", posts);\n          setArchivePosts(posts);\n        });\n    }\n  }, [slug]);\n\n  // change pages\n  useEffect(() => {\n    return getArchivePosts(currentPage)\n      .then((res) => res.json())\n      .then((posts) => {\n        setArchivePosts(posts);\n      });\n  }, [currentPage]);\n\n  return (\n    <HomePageRoot>\n      <Intro />\n      <HomeWrapper>\n        {!slug && <ArchiveTitle>所有文章</ArchiveTitle>}\n        {slug && author && (\n          <ArchiveTitle>\n            '{author.nickname}' 目前發表了 {author.postNum} 篇文章\n          </ArchiveTitle>\n        )}\n        {archivePosts &&\n          archivePosts.map((post) => <ArchiveItem key={post.id} post={post} />)}\n        {slug &&\n          userPosts.map((post) => <ArchiveItem key={post.id} post={post} />)}\n        {!slug && archivePosts && totalPage && (\n          <Pagination\n            current={currentPage}\n            total={totalPage}\n            handleChangePage={handleChangePage}\n          />\n        )}\n      </HomeWrapper>\n    </HomePageRoot>\n  );\n}\n\nexport default ArchivePage;\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AppWrapper } from \"./Home\";\nimport Header from \"./Header\";\nimport HomePage from \"../pages/Home\";\nimport AboutPage from \"../pages/About\";\nimport LoginPage from \"../pages/Login\";\nimport RegisterPage from \"../pages/Register\";\nimport NewPostPage from \"../pages/NewPost\";\nimport PostPage from \"../pages/Post\";\nimport ArchivePage from \"../pages/Archive\";\nimport { AuthContext } from \"../contexts\";\nimport { getUserInfo } from \"../WebAPI\";\nimport { getAuthToken, setAuthToken } from \"../utills\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // init login status\n    if (getAuthToken()) {\n      getUserInfo().then((response) => {\n        if (!response.ok) {\n          return setAuthToken(null);\n        }\n        setUser(response.data);\n      });\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <AppWrapper>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/about\">\n              <AboutPage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route path=\"/post\">\n              <NewPostPage />\n            </Route>\n            <Route path=\"/archive\">\n              <ArchivePage />\n            </Route>\n            <Route path=\"/posts/:slug\">\n              <PostPage />\n            </Route>\n            <Route path=\"/user/:slug\">\n              <ArchivePage />\n            </Route>\n          </Switch>\n        </Router>\n      </AppWrapper>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}